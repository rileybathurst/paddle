/*------------------*/
/* #LAYOUT */
/*------------------*/

body {
  margin: 0; /* reset */
}

.vulture,
.stork,
.condor,
.pelican,
.albatross,
.location,
header,
main,
footer,
.deck,
.react-aria-Breadcrumbs {
  margin-inline: auto;
  padding-inline: var(--kosciuszko);
  width: calc(100% - var(--kosciuszko) * 2);
}

.vulture {
  max-width: min(var(--vulture), calc(100vw - var(--denali)));
  flex-basis: var(--vulture);
}

.stork {
  max-width: min(var(--stork), calc(100vw - var(--denali)));
  flex-basis: var(--stork);
}

.condor,
header,
main,
.location,
.react-aria-Breadcrumbs.condor {
  max-width: min(var(--condor), calc(100vw - var(--denali)));
  flex-basis: var(--condor);
}

.pelican,
.react-aria-Breadcrumbs.pelican {
  max-width: min(var(--pelican), calc(100vw - var(--denali)));
  flex-basis: var(--pelican);
}

.albatross,
footer,
.deck,
.react-aria-Breadcrumbs {
  max-width: min(var(--albatross), calc(100vw - var(--denali)));
  flex-basis: var(--albatross);
}

/*------------------------------------*/

/* TODO: media queries for the nested wraps */

.wrap,
.deck,
footer {
  display: flex;
  flex-flow: row wrap;
  gap: clamp(var(--kosciuszko), 1.667vw, var(--denali));
  padding-inline: var(--kosciuszko);

  > * {
    flex: 1 1;
    width: 100%;
    height: fit-content;
  }
}

.pelican.wrap > *,
.albatross.wrap > *,
.deck > *,
footer > * {
  max-width: none; /* TODO: this is breaking .composition on storybook */
  margin-inline: 0;
  padding-inline: 0;
}

.pelican.wrap > * {
  flex: 1 1 calc(var(--pelican) / 2 - var(--vinson));
}

.albatross.wrap > *,
.deck > * {
  flex: 1 1 calc(var(--albatross) / 2 - var(--vinson));
}

.albatross.wrap .composition {
  max-width: fit-content;
}

/*------------------------------------*/
/* #NESTED */
/*------------------------------------*/

/* this isnt a direct nested its always down another layer */
.albatross .pelican,
/* ! deck * needs to be removed its maybe only the image that needs it */
.deck > *:not(h4, p, hr) {
  /* ? margin-inline: 0; ? should this be centered */
  /* TODO: this needs a :not for a few things */
  width: 100%; /* resets the padding */
  padding-inline: 0;
}

/*------------------*/
/* #DEFAULTS */
/*------------------*/

header,
main,
footer {
  margin-block-end: clamp(var(--kosciuszko), 2.5vw, var(--denali));
}

header {
  h1,
  h2 {
    text-align: center;
  }

  h2 {
    max-width: var(--vulture);
    margin-inline: auto;
    font-size: 2rem;

    a {
      display: inline-block;
    }
  }

  button:hover {
    box-shadow: none; /* reset */
  }
}

/*------------------------------------*/
/* #BLOCK END */
/* this seems like something you could do more interesting in a programatic way */
/*------------------------------------*/

.everest-block-end {
  margin-block-end: var(--everest);
}

.aconcagua-block-end {
  margin-block-end: var(--aconcagua);
}

.denali-block-end {
  margin-block-end: var(--denali);
}

.kilimanjaro-block-end {
  margin-block-end: var(--kilimanjaro);
}

.elbrus-block-end {
  margin-block-end: var(--elbrus);
}

.vinson-block-end {
  margin-block-end: var(--vinson);
}

.kosciuszko-block-end {
  margin-block-end: var(--kosciuszko);
}

.zero-block-end {
  margin-block-end: 0;
}

/*------------------*/
/* #TOP BAR */
/*------------------*/

.top-bar {
  transition: var(--slow);
  display: flex;
  justify-content: center;
  padding-block-start: 0.25rem;
  z-index: var(--emergent); /* over the small menu when it slides up */
  position: relative;

  p {
    margin-block-end: 0.25rem;
  }
}

.top-bar.hidden {
  height: 0;
  opacity: 0;
}

/*------------------------------------*/
/* #SOCIAL */
/*------------------------------------*/

.social {
  display: flex;
  gap: clamp(var(--kilimanjaro), 1.667vw, var(--aconcagua));
  margin-block: clamp(var(--kilimanjaro), 1.667vw, var(--aconcagua));
}

/*------------------*/
/* #LOCATION */
/*------------------*/

.location-deck {
  margin-block-end: var(--kilimanjaro);
}

.location {
  max-width: var(--condor);
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  gap: clamp(var(--kosciuszko), 1.67vw, var(--elbrus));
  padding: clamp(var(--kosciuszko), 1.67vw, var(--elbrus));
  border-radius: var(--card-radius);

  > * {
    /* guess and check to get the parking on one row in the footer */
    flex: 7.5 1 var(--vulture);
  }

  > svg,
  .svg {
    flex: 1 1 max-content;
    min-width: var(--everest);
    min-height: var(--everest);
  }

  p {
    margin-block-end: 0; /* reset to the gap */
  }
}

.location.false:not(:last-child) {
  border-block-end: 1px solid;
  border-radius: 0;
}

/*------------------*/
/* #COMPOSITION */
/*------------------*/

.composition {
  /* grid-area: composition; /* ? is this still used */
  display: grid;
  grid-template-columns: 5% 10% 70% 10% 5%;
  grid-template-rows: 5% 90% 5%;
  margin-block-end: var(--vinson);

  /* these dont obey the max height at all */
  /* max-height: var(--stork); ? */
  /* max-height: 23rem; TODO: guess and check can I use a variable */
  /* overflow: hidden; */

  .gatsby-image-wrapper,
  .storybook-gatsby-image {
    max-width: 100%;
  }

  > img {
    display: block;
  }

  .paddler {
    grid-column: 3;
    grid-row: 2;
    aspect-ratio: 1;
    border: none;
    box-shadow: none;
    margin-block: 1rem;

    img {
      border-radius: 50%;
      border: 2px solid;
      width: calc(100% - 4px);
      height: calc(100% - 4px);
    }
  }

  /* gatsby nesting breaks the design */
  .storybook-paddler {
    grid-column: 3;
    grid-row: 2;
    aspect-ratio: 1;
    border: none;
    box-shadow: none;
    margin-block: 1rem;
    border-radius: 50%;
    border: 2px solid;
    width: calc(100% - 4px);
    height: calc(100% - 4px);
  }

  .t1 {
    grid-column: 1/5;
    grid-row: 1/3;
    aspect-ratio: 16/9;
  }

  .t2 {
    grid-column: 2/6;
    grid-row: 2/4;
    aspect-ratio: 16/9;
    place-self: end;

    img {
      object-fit: cover !important;
    }
  }
}
